class Animal:  # Создаём класс
    def __init__(self, color, voice):  # создаём параметры для объекта
        self.color = color  # просто передаём, что в других функциях мы будем использовать именно эти параметры
        self.voice = voice

    def do_voice(self):  # Создаём различные функции для объекта
        """ Возвращает то, что находится в переменной voice """  # желательно писать комментарии к функциям
        return self.voice


animal = Animal("green", "rrr")  # создаём объект - теперь это большая переменная, которая умеет делать больше,
# чем обычные
print(animal.color)  # можем просто выписать любой параметр
print(animal.do_voice())  # можем вызывать функции, который есть в классе объекта


class Tiger(Animal):  # создаём подкласс - более точная модификация класса
    # Теперь init не нужен, если мы не будем добавлять новые параметры, старые у нас уже есть из класса Animal
    # можем изменить предыдущую функцию или создать новую, в Animal или в других подклассах будет другое
    def do_voice(self):
        """ Возвращает голос + добавляет на следующей строке, что это тигр """
        return self.voice + "\nI'm Tiger!"


tiger = Tiger("orange", "RRR")  # создаём новый объект
tiger.color = "black"  # можем просто изменить ему параметр по ходу программы
print(tiger.color)
print(tiger.do_voice())  # теперь тут не будет функции из Animal, мы её переписали в подклассе
